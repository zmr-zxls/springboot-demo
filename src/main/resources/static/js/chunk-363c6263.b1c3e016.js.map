{"version":3,"sources":["webpack:///./node_modules/dompurify/dist/purify.js","webpack:///./src/views/About.vue?d8d4","webpack:///./src/views/About.vue?1abb","webpack:///src/views/About.vue","webpack:///./src/views/About.vue?f1da","webpack:///./src/views/About.vue"],"names":["global","factory","module","exports","this","freeze$1","Object","freeze","x","html","svg","svgFilters","mathMl","text","freeze$2","html$1","svg$1","mathMl$1","xml","hasOwnProperty","setPrototypeOf","_ref$1","Reflect","apply$1","apply","addToSet","set","array","l","length","element","lcElement","toLowerCase","isFrozen","clone","object","newObject","property","fun","thisValue","args","seal","MUSTACHE_EXPR","ERB_EXPR","DATA_ATTR","ARIA_ATTR","IS_ALLOWED_URI","IS_SCRIPT_OR_DATA","ATTR_WHITESPACE","_typeof","Symbol","iterator","obj","constructor","prototype","_toConsumableArray","arr","Array","isArray","i","arr2","from","_ref","arraySlice","slice","getGlobal","window","_createTrustedTypesPolicy","trustedTypes","document","createPolicy","suffix","ATTR_NAME","currentScript","hasAttribute","getAttribute","policyName","createHTML","html$$1","error","console","warn","createDOMPurify","arguments","undefined","DOMPurify","root","version","removed","nodeType","isSupported","originalDocument","useDOMParser","removeTitle","DocumentFragment","HTMLTemplateElement","Node","NodeFilter","_window$NamedNodeMap","NamedNodeMap","MozNamedAttrMap","Text","Comment","DOMParser","TrustedTypes","template","createElement","content","ownerDocument","trustedTypesPolicy","emptyHTML","_document","implementation","createNodeIterator","getElementsByTagName","createDocumentFragment","importNode","hooks","createHTMLDocument","documentMode","MUSTACHE_EXPR$$1","ERB_EXPR$$1","DATA_ATTR$$1","ARIA_ATTR$$1","IS_SCRIPT_OR_DATA$$1","ATTR_WHITESPACE$$1","IS_ALLOWED_URI$$1","ALLOWED_TAGS","DEFAULT_ALLOWED_TAGS","concat","ALLOWED_ATTR","DEFAULT_ALLOWED_ATTR","FORBID_TAGS","FORBID_ATTR","ALLOW_ARIA_ATTR","ALLOW_DATA_ATTR","ALLOW_UNKNOWN_PROTOCOLS","SAFE_FOR_JQUERY","SAFE_FOR_TEMPLATES","WHOLE_DOCUMENT","SET_CONFIG","FORCE_BODY","RETURN_DOM","RETURN_DOM_FRAGMENT","RETURN_DOM_IMPORT","SANITIZE_DOM","KEEP_CONTENT","IN_PLACE","USE_PROFILES","FORBID_CONTENTS","DATA_URI_TAGS","URI_SAFE_ATTRIBUTES","CONFIG","formElement","_parseConfig","cfg","ALLOWED_URI_REGEXP","ADD_TAGS","ADD_ATTR","ADD_URI_SAFE_ATTR","table","_forceRemove","node","push","parentNode","removeChild","outerHTML","_removeAttribute","name","attribute","getAttributeNode","removeAttribute","_initDocument","dirty","doc","leadingWhitespace","matches","match","parseFromString","documentElement","_doc","body","firstElementChild","insertBefore","createTextNode","childNodes","call","querySelector","innerHTML","_createIterator","SHOW_ELEMENT","SHOW_COMMENT","SHOW_TEXT","FILTER_ACCEPT","_isClobbered","elm","nodeName","textContent","attributes","setAttribute","_isNode","_executeHook","entryPoint","currentNode","data","forEach","hook","_sanitizeElements","tagName","allowedTags","insertAdjacentHTML","htmlToInsert","test","cloneNode","replace","_isValidAttribute","lcTag","lcName","value","indexOf","_sanitizeAttributes","attr","idAttr","hookEvent","attrName","attrValue","keepAttr","allowedAttributes","_attr","namespaceURI","trim","id","setAttributeNS","pop","_sanitizeShadowDOM","fragment","shadowNode","shadowIterator","nextNode","sanitize","importedNode","oldNode","returnNode","toString","TypeError","toStaticHTML","appendChild","firstChild","nodeIterator","serializedHTML","setConfig","clearConfig","isValidAttribute","tag","addHook","hookFunction","removeHook","removeHooks","removeAllHooks","purify","_node_modules_mini_css_extract_plugin_dist_loader_js_ref_6_oneOf_1_0_node_modules_css_loader_index_js_ref_6_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_6_oneOf_1_2_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_About_vue_vue_type_style_index_0_lang_css___WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","_node_modules_mini_css_extract_plugin_dist_loader_js_ref_6_oneOf_1_0_node_modules_css_loader_index_js_ref_6_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_6_oneOf_1_2_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_About_vue_vue_type_style_index_0_lang_css___WEBPACK_IMPORTED_MODULE_0___default","n","render","_vm","_h","$createElement","_c","_self","staticClass","_v","directives","rawName","expression","domProps","on","input","$event","target","composing","inputValue","_s","outputValue","staticRenderFns","Aboutvue_type_script_lang_js_","[object Object]","watch","val","purify_default","a","views_Aboutvue_type_script_lang_js_","component","componentNormalizer","__webpack_exports__"],"mappings":"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","file":"js/chunk-363c6263.b1c3e016.js","sourcesContent":["(function (global, factory) {\n\ttypeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n\ttypeof define === 'function' && define.amd ? define(factory) :\n\t(global.DOMPurify = factory());\n}(this, (function () { 'use strict';\n\nvar freeze$1 = Object.freeze || function (x) {\n  return x;\n};\n\nvar html = freeze$1(['a', 'abbr', 'acronym', 'address', 'area', 'article', 'aside', 'audio', 'b', 'bdi', 'bdo', 'big', 'blink', 'blockquote', 'body', 'br', 'button', 'canvas', 'caption', 'center', 'cite', 'code', 'col', 'colgroup', 'content', 'data', 'datalist', 'dd', 'decorator', 'del', 'details', 'dfn', 'dir', 'div', 'dl', 'dt', 'element', 'em', 'fieldset', 'figcaption', 'figure', 'font', 'footer', 'form', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'head', 'header', 'hgroup', 'hr', 'html', 'i', 'img', 'input', 'ins', 'kbd', 'label', 'legend', 'li', 'main', 'map', 'mark', 'marquee', 'menu', 'menuitem', 'meter', 'nav', 'nobr', 'ol', 'optgroup', 'option', 'output', 'p', 'pre', 'progress', 'q', 'rp', 'rt', 'ruby', 's', 'samp', 'section', 'select', 'shadow', 'small', 'source', 'spacer', 'span', 'strike', 'strong', 'style', 'sub', 'summary', 'sup', 'table', 'tbody', 'td', 'template', 'textarea', 'tfoot', 'th', 'thead', 'time', 'tr', 'track', 'tt', 'u', 'ul', 'var', 'video', 'wbr']);\n\n// SVG\nvar svg = freeze$1(['svg', 'a', 'altglyph', 'altglyphdef', 'altglyphitem', 'animatecolor', 'animatemotion', 'animatetransform', 'audio', 'canvas', 'circle', 'clippath', 'defs', 'desc', 'ellipse', 'filter', 'font', 'g', 'glyph', 'glyphref', 'hkern', 'image', 'line', 'lineargradient', 'marker', 'mask', 'metadata', 'mpath', 'path', 'pattern', 'polygon', 'polyline', 'radialgradient', 'rect', 'stop', 'style', 'switch', 'symbol', 'text', 'textpath', 'title', 'tref', 'tspan', 'video', 'view', 'vkern']);\n\nvar svgFilters = freeze$1(['feBlend', 'feColorMatrix', 'feComponentTransfer', 'feComposite', 'feConvolveMatrix', 'feDiffuseLighting', 'feDisplacementMap', 'feDistantLight', 'feFlood', 'feFuncA', 'feFuncB', 'feFuncG', 'feFuncR', 'feGaussianBlur', 'feMerge', 'feMergeNode', 'feMorphology', 'feOffset', 'fePointLight', 'feSpecularLighting', 'feSpotLight', 'feTile', 'feTurbulence']);\n\nvar mathMl = freeze$1(['math', 'menclose', 'merror', 'mfenced', 'mfrac', 'mglyph', 'mi', 'mlabeledtr', 'mmultiscripts', 'mn', 'mo', 'mover', 'mpadded', 'mphantom', 'mroot', 'mrow', 'ms', 'mspace', 'msqrt', 'mstyle', 'msub', 'msup', 'msubsup', 'mtable', 'mtd', 'mtext', 'mtr', 'munder', 'munderover']);\n\nvar text = freeze$1(['#text']);\n\nvar freeze$2 = Object.freeze || function (x) {\n  return x;\n};\n\nvar html$1 = freeze$2(['accept', 'action', 'align', 'alt', 'autocomplete', 'background', 'bgcolor', 'border', 'cellpadding', 'cellspacing', 'checked', 'cite', 'class', 'clear', 'color', 'cols', 'colspan', 'coords', 'crossorigin', 'datetime', 'default', 'dir', 'disabled', 'download', 'enctype', 'face', 'for', 'headers', 'height', 'hidden', 'high', 'href', 'hreflang', 'id', 'integrity', 'ismap', 'label', 'lang', 'list', 'loop', 'low', 'max', 'maxlength', 'media', 'method', 'min', 'multiple', 'name', 'noshade', 'novalidate', 'nowrap', 'open', 'optimum', 'pattern', 'placeholder', 'poster', 'preload', 'pubdate', 'radiogroup', 'readonly', 'rel', 'required', 'rev', 'reversed', 'role', 'rows', 'rowspan', 'spellcheck', 'scope', 'selected', 'shape', 'size', 'sizes', 'span', 'srclang', 'start', 'src', 'srcset', 'step', 'style', 'summary', 'tabindex', 'title', 'type', 'usemap', 'valign', 'value', 'width', 'xmlns']);\n\nvar svg$1 = freeze$2(['accent-height', 'accumulate', 'additive', 'alignment-baseline', 'ascent', 'attributename', 'attributetype', 'azimuth', 'basefrequency', 'baseline-shift', 'begin', 'bias', 'by', 'class', 'clip', 'clip-path', 'clip-rule', 'color', 'color-interpolation', 'color-interpolation-filters', 'color-profile', 'color-rendering', 'cx', 'cy', 'd', 'dx', 'dy', 'diffuseconstant', 'direction', 'display', 'divisor', 'dur', 'edgemode', 'elevation', 'end', 'fill', 'fill-opacity', 'fill-rule', 'filter', 'flood-color', 'flood-opacity', 'font-family', 'font-size', 'font-size-adjust', 'font-stretch', 'font-style', 'font-variant', 'font-weight', 'fx', 'fy', 'g1', 'g2', 'glyph-name', 'glyphref', 'gradientunits', 'gradienttransform', 'height', 'href', 'id', 'image-rendering', 'in', 'in2', 'k', 'k1', 'k2', 'k3', 'k4', 'kerning', 'keypoints', 'keysplines', 'keytimes', 'lang', 'lengthadjust', 'letter-spacing', 'kernelmatrix', 'kernelunitlength', 'lighting-color', 'local', 'marker-end', 'marker-mid', 'marker-start', 'markerheight', 'markerunits', 'markerwidth', 'maskcontentunits', 'maskunits', 'max', 'mask', 'media', 'method', 'mode', 'min', 'name', 'numoctaves', 'offset', 'operator', 'opacity', 'order', 'orient', 'orientation', 'origin', 'overflow', 'paint-order', 'path', 'pathlength', 'patterncontentunits', 'patterntransform', 'patternunits', 'points', 'preservealpha', 'preserveaspectratio', 'r', 'rx', 'ry', 'radius', 'refx', 'refy', 'repeatcount', 'repeatdur', 'restart', 'result', 'rotate', 'scale', 'seed', 'shape-rendering', 'specularconstant', 'specularexponent', 'spreadmethod', 'stddeviation', 'stitchtiles', 'stop-color', 'stop-opacity', 'stroke-dasharray', 'stroke-dashoffset', 'stroke-linecap', 'stroke-linejoin', 'stroke-miterlimit', 'stroke-opacity', 'stroke', 'stroke-width', 'style', 'surfacescale', 'tabindex', 'targetx', 'targety', 'transform', 'text-anchor', 'text-decoration', 'text-rendering', 'textlength', 'type', 'u1', 'u2', 'unicode', 'values', 'viewbox', 'visibility', 'version', 'vert-adv-y', 'vert-origin-x', 'vert-origin-y', 'width', 'word-spacing', 'wrap', 'writing-mode', 'xchannelselector', 'ychannelselector', 'x', 'x1', 'x2', 'xmlns', 'y', 'y1', 'y2', 'z', 'zoomandpan']);\n\nvar mathMl$1 = freeze$2(['accent', 'accentunder', 'align', 'bevelled', 'close', 'columnsalign', 'columnlines', 'columnspan', 'denomalign', 'depth', 'dir', 'display', 'displaystyle', 'fence', 'frame', 'height', 'href', 'id', 'largeop', 'length', 'linethickness', 'lspace', 'lquote', 'mathbackground', 'mathcolor', 'mathsize', 'mathvariant', 'maxsize', 'minsize', 'movablelimits', 'notation', 'numalign', 'open', 'rowalign', 'rowlines', 'rowspacing', 'rowspan', 'rspace', 'rquote', 'scriptlevel', 'scriptminsize', 'scriptsizemultiplier', 'selection', 'separator', 'separators', 'stretchy', 'subscriptshift', 'supscriptshift', 'symmetric', 'voffset', 'width', 'xmlns']);\n\nvar xml = freeze$2(['xlink:href', 'xml:id', 'xlink:title', 'xml:space', 'xmlns:xlink']);\n\nvar hasOwnProperty = Object.hasOwnProperty;\nvar setPrototypeOf = Object.setPrototypeOf;\n\nvar _ref$1 = typeof Reflect !== 'undefined' && Reflect;\nvar apply$1 = _ref$1.apply;\n\nif (!apply$1) {\n  apply$1 = function apply(fun, thisValue, args) {\n    return fun.apply(thisValue, args);\n  };\n}\n\n/* Add properties to a lookup table */\nfunction addToSet(set, array) {\n  if (setPrototypeOf) {\n    // Make 'in' and truthy checks like Boolean(set.constructor)\n    // independent of any properties defined on Object.prototype.\n    // Prevent prototype setters from intercepting set as a this value.\n    setPrototypeOf(set, null);\n  }\n\n  var l = array.length;\n  while (l--) {\n    var element = array[l];\n    if (typeof element === 'string') {\n      var lcElement = element.toLowerCase();\n      if (lcElement !== element) {\n        // Config presets (e.g. tags.js, attrs.js) are immutable.\n        if (!Object.isFrozen(array)) {\n          array[l] = lcElement;\n        }\n\n        element = lcElement;\n      }\n    }\n\n    set[element] = true;\n  }\n\n  return set;\n}\n\n/* Shallow clone an object */\nfunction clone(object) {\n  var newObject = {};\n\n  var property = void 0;\n  for (property in object) {\n    if (apply$1(hasOwnProperty, object, [property])) {\n      newObject[property] = object[property];\n    }\n  }\n\n  return newObject;\n}\n\nvar seal = Object.seal || function (x) {\n  return x;\n};\n\nvar MUSTACHE_EXPR = seal(/\\{\\{[\\s\\S]*|[\\s\\S]*\\}\\}/gm); // Specify template detection regex for SAFE_FOR_TEMPLATES mode\nvar ERB_EXPR = seal(/<%[\\s\\S]*|[\\s\\S]*%>/gm);\nvar DATA_ATTR = seal(/^data-[\\-\\w.\\u00B7-\\uFFFF]/); // eslint-disable-line no-useless-escape\nvar ARIA_ATTR = seal(/^aria-[\\-\\w]+$/); // eslint-disable-line no-useless-escape\nvar IS_ALLOWED_URI = seal(/^(?:(?:(?:f|ht)tps?|mailto|tel|callto|cid|xmpp):|[^a-z]|[a-z+.\\-]+(?:[^a-z+.\\-:]|$))/i // eslint-disable-line no-useless-escape\n);\nvar IS_SCRIPT_OR_DATA = seal(/^(?:\\w+script|data):/i);\nvar ATTR_WHITESPACE = seal(/[\\u0000-\\u0020\\u00A0\\u1680\\u180E\\u2000-\\u2029\\u205f\\u3000]/g // eslint-disable-line no-control-regex\n);\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\n\nvar _ref = typeof Reflect !== 'undefined' && Reflect;\nvar apply = _ref.apply;\n\nvar arraySlice = Array.prototype.slice;\nvar freeze = Object.freeze;\n\nvar getGlobal = function getGlobal() {\n  return typeof window === 'undefined' ? null : window;\n};\n\nif (!apply) {\n  apply = function apply(fun, thisValue, args) {\n    return fun.apply(thisValue, args);\n  };\n}\n\n/**\n * Creates a no-op policy for internal use only.\n * Don't export this function outside this module!\n * @param {?TrustedTypePolicyFactory} trustedTypes The policy factory.\n * @param {Document} document The document object (to determine policy name suffix)\n * @return {?TrustedTypePolicy} The policy created (or null, if Trusted Types\n * are not supported).\n */\nvar _createTrustedTypesPolicy = function _createTrustedTypesPolicy(trustedTypes, document) {\n  if ((typeof trustedTypes === 'undefined' ? 'undefined' : _typeof(trustedTypes)) !== 'object' || typeof trustedTypes.createPolicy !== 'function') {\n    return null;\n  }\n\n  // Allow the callers to control the unique policy name\n  // by adding a data-tt-policy-suffix to the script element with the DOMPurify.\n  // Policy creation with duplicate names throws in Trusted Types.\n  var suffix = null;\n  var ATTR_NAME = 'data-tt-policy-suffix';\n  if (document.currentScript && document.currentScript.hasAttribute(ATTR_NAME)) {\n    suffix = document.currentScript.getAttribute(ATTR_NAME);\n  }\n\n  var policyName = 'dompurify' + (suffix ? '#' + suffix : '');\n\n  try {\n    return trustedTypes.createPolicy(policyName, {\n      createHTML: function createHTML(html$$1) {\n        return html$$1;\n      }\n    });\n  } catch (error) {\n    // Policy creation failed (most likely another DOMPurify script has\n    // already run). Skip creating the policy, as this will only cause errors\n    // if TT are enforced.\n    console.warn('TrustedTypes policy ' + policyName + ' could not be created.');\n    return null;\n  }\n};\n\nfunction createDOMPurify() {\n  var window = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : getGlobal();\n\n  var DOMPurify = function DOMPurify(root) {\n    return createDOMPurify(root);\n  };\n\n  /**\n   * Version label, exposed for easier checks\n   * if DOMPurify is up to date or not\n   */\n  DOMPurify.version = '1.0.10';\n\n  /**\n   * Array of elements that DOMPurify removed during sanitation.\n   * Empty if nothing was removed.\n   */\n  DOMPurify.removed = [];\n\n  if (!window || !window.document || window.document.nodeType !== 9) {\n    // Not running in a browser, provide a factory function\n    // so that you can pass your own Window\n    DOMPurify.isSupported = false;\n\n    return DOMPurify;\n  }\n\n  var originalDocument = window.document;\n  var useDOMParser = false;\n  var removeTitle = false;\n\n  var document = window.document;\n  var DocumentFragment = window.DocumentFragment,\n      HTMLTemplateElement = window.HTMLTemplateElement,\n      Node = window.Node,\n      NodeFilter = window.NodeFilter,\n      _window$NamedNodeMap = window.NamedNodeMap,\n      NamedNodeMap = _window$NamedNodeMap === undefined ? window.NamedNodeMap || window.MozNamedAttrMap : _window$NamedNodeMap,\n      Text = window.Text,\n      Comment = window.Comment,\n      DOMParser = window.DOMParser,\n      TrustedTypes = window.TrustedTypes;\n\n  // As per issue #47, the web-components registry is inherited by a\n  // new document created via createHTMLDocument. As per the spec\n  // (http://w3c.github.io/webcomponents/spec/custom/#creating-and-passing-registries)\n  // a new empty registry is used when creating a template contents owner\n  // document, so we use that as our parent document to ensure nothing\n  // is inherited.\n\n  if (typeof HTMLTemplateElement === 'function') {\n    var template = document.createElement('template');\n    if (template.content && template.content.ownerDocument) {\n      document = template.content.ownerDocument;\n    }\n  }\n\n  var trustedTypesPolicy = _createTrustedTypesPolicy(TrustedTypes, originalDocument);\n  var emptyHTML = trustedTypesPolicy ? trustedTypesPolicy.createHTML('') : '';\n\n  var _document = document,\n      implementation = _document.implementation,\n      createNodeIterator = _document.createNodeIterator,\n      getElementsByTagName = _document.getElementsByTagName,\n      createDocumentFragment = _document.createDocumentFragment;\n  var importNode = originalDocument.importNode;\n\n\n  var hooks = {};\n\n  /**\n   * Expose whether this browser supports running the full DOMPurify.\n   */\n  DOMPurify.isSupported = implementation && typeof implementation.createHTMLDocument !== 'undefined' && document.documentMode !== 9;\n\n  var MUSTACHE_EXPR$$1 = MUSTACHE_EXPR,\n      ERB_EXPR$$1 = ERB_EXPR,\n      DATA_ATTR$$1 = DATA_ATTR,\n      ARIA_ATTR$$1 = ARIA_ATTR,\n      IS_SCRIPT_OR_DATA$$1 = IS_SCRIPT_OR_DATA,\n      ATTR_WHITESPACE$$1 = ATTR_WHITESPACE;\n  var IS_ALLOWED_URI$$1 = IS_ALLOWED_URI;\n  /**\n   * We consider the elements and attributes below to be safe. Ideally\n   * don't add any new ones but feel free to remove unwanted ones.\n   */\n\n  /* allowed element names */\n\n  var ALLOWED_TAGS = null;\n  var DEFAULT_ALLOWED_TAGS = addToSet({}, [].concat(_toConsumableArray(html), _toConsumableArray(svg), _toConsumableArray(svgFilters), _toConsumableArray(mathMl), _toConsumableArray(text)));\n\n  /* Allowed attribute names */\n  var ALLOWED_ATTR = null;\n  var DEFAULT_ALLOWED_ATTR = addToSet({}, [].concat(_toConsumableArray(html$1), _toConsumableArray(svg$1), _toConsumableArray(mathMl$1), _toConsumableArray(xml)));\n\n  /* Explicitly forbidden tags (overrides ALLOWED_TAGS/ADD_TAGS) */\n  var FORBID_TAGS = null;\n\n  /* Explicitly forbidden attributes (overrides ALLOWED_ATTR/ADD_ATTR) */\n  var FORBID_ATTR = null;\n\n  /* Decide if ARIA attributes are okay */\n  var ALLOW_ARIA_ATTR = true;\n\n  /* Decide if custom data attributes are okay */\n  var ALLOW_DATA_ATTR = true;\n\n  /* Decide if unknown protocols are okay */\n  var ALLOW_UNKNOWN_PROTOCOLS = false;\n\n  /* Output should be safe for jQuery's $() factory? */\n  var SAFE_FOR_JQUERY = false;\n\n  /* Output should be safe for common template engines.\n   * This means, DOMPurify removes data attributes, mustaches and ERB\n   */\n  var SAFE_FOR_TEMPLATES = false;\n\n  /* Decide if document with <html>... should be returned */\n  var WHOLE_DOCUMENT = false;\n\n  /* Track whether config is already set on this instance of DOMPurify. */\n  var SET_CONFIG = false;\n\n  /* Decide if all elements (e.g. style, script) must be children of\n   * document.body. By default, browsers might move them to document.head */\n  var FORCE_BODY = false;\n\n  /* Decide if a DOM `HTMLBodyElement` should be returned, instead of a html\n   * string (or a TrustedHTML object if Trusted Types are supported).\n   * If `WHOLE_DOCUMENT` is enabled a `HTMLHtmlElement` will be returned instead\n   */\n  var RETURN_DOM = false;\n\n  /* Decide if a DOM `DocumentFragment` should be returned, instead of a html\n   * string  (or a TrustedHTML object if Trusted Types are supported) */\n  var RETURN_DOM_FRAGMENT = false;\n\n  /* If `RETURN_DOM` or `RETURN_DOM_FRAGMENT` is enabled, decide if the returned DOM\n   * `Node` is imported into the current `Document`. If this flag is not enabled the\n   * `Node` will belong (its ownerDocument) to a fresh `HTMLDocument`, created by\n   * DOMPurify. */\n  var RETURN_DOM_IMPORT = false;\n\n  /* Output should be free from DOM clobbering attacks? */\n  var SANITIZE_DOM = true;\n\n  /* Keep element content when removing element? */\n  var KEEP_CONTENT = true;\n\n  /* If a `Node` is passed to sanitize(), then performs sanitization in-place instead\n   * of importing it into a new Document and returning a sanitized copy */\n  var IN_PLACE = false;\n\n  /* Allow usage of profiles like html, svg and mathMl */\n  var USE_PROFILES = {};\n\n  /* Tags to ignore content of when KEEP_CONTENT is true */\n  var FORBID_CONTENTS = addToSet({}, ['audio', 'head', 'math', 'script', 'style', 'template', 'svg', 'video']);\n\n  /* Tags that are safe for data: URIs */\n  var DATA_URI_TAGS = addToSet({}, ['audio', 'video', 'img', 'source', 'image']);\n\n  /* Attributes safe for values like \"javascript:\" */\n  var URI_SAFE_ATTRIBUTES = addToSet({}, ['alt', 'class', 'for', 'id', 'label', 'name', 'pattern', 'placeholder', 'summary', 'title', 'value', 'style', 'xmlns']);\n\n  /* Keep a reference to config to pass to hooks */\n  var CONFIG = null;\n\n  /* Ideally, do not touch anything below this line */\n  /* ______________________________________________ */\n\n  var formElement = document.createElement('form');\n\n  /**\n   * _parseConfig\n   *\n   * @param  {Object} cfg optional config literal\n   */\n  // eslint-disable-next-line complexity\n  var _parseConfig = function _parseConfig(cfg) {\n    if (CONFIG && CONFIG === cfg) {\n      return;\n    }\n\n    /* Shield configuration object from tampering */\n    if (!cfg || (typeof cfg === 'undefined' ? 'undefined' : _typeof(cfg)) !== 'object') {\n      cfg = {};\n    }\n\n    /* Set configuration parameters */\n    ALLOWED_TAGS = 'ALLOWED_TAGS' in cfg ? addToSet({}, cfg.ALLOWED_TAGS) : DEFAULT_ALLOWED_TAGS;\n    ALLOWED_ATTR = 'ALLOWED_ATTR' in cfg ? addToSet({}, cfg.ALLOWED_ATTR) : DEFAULT_ALLOWED_ATTR;\n    FORBID_TAGS = 'FORBID_TAGS' in cfg ? addToSet({}, cfg.FORBID_TAGS) : {};\n    FORBID_ATTR = 'FORBID_ATTR' in cfg ? addToSet({}, cfg.FORBID_ATTR) : {};\n    USE_PROFILES = 'USE_PROFILES' in cfg ? cfg.USE_PROFILES : false;\n    ALLOW_ARIA_ATTR = cfg.ALLOW_ARIA_ATTR !== false; // Default true\n    ALLOW_DATA_ATTR = cfg.ALLOW_DATA_ATTR !== false; // Default true\n    ALLOW_UNKNOWN_PROTOCOLS = cfg.ALLOW_UNKNOWN_PROTOCOLS || false; // Default false\n    SAFE_FOR_JQUERY = cfg.SAFE_FOR_JQUERY || false; // Default false\n    SAFE_FOR_TEMPLATES = cfg.SAFE_FOR_TEMPLATES || false; // Default false\n    WHOLE_DOCUMENT = cfg.WHOLE_DOCUMENT || false; // Default false\n    RETURN_DOM = cfg.RETURN_DOM || false; // Default false\n    RETURN_DOM_FRAGMENT = cfg.RETURN_DOM_FRAGMENT || false; // Default false\n    RETURN_DOM_IMPORT = cfg.RETURN_DOM_IMPORT || false; // Default false\n    FORCE_BODY = cfg.FORCE_BODY || false; // Default false\n    SANITIZE_DOM = cfg.SANITIZE_DOM !== false; // Default true\n    KEEP_CONTENT = cfg.KEEP_CONTENT !== false; // Default true\n    IN_PLACE = cfg.IN_PLACE || false; // Default false\n\n    IS_ALLOWED_URI$$1 = cfg.ALLOWED_URI_REGEXP || IS_ALLOWED_URI$$1;\n\n    if (SAFE_FOR_TEMPLATES) {\n      ALLOW_DATA_ATTR = false;\n    }\n\n    if (RETURN_DOM_FRAGMENT) {\n      RETURN_DOM = true;\n    }\n\n    /* Parse profile info */\n    if (USE_PROFILES) {\n      ALLOWED_TAGS = addToSet({}, [].concat(_toConsumableArray(text)));\n      ALLOWED_ATTR = [];\n      if (USE_PROFILES.html === true) {\n        addToSet(ALLOWED_TAGS, html);\n        addToSet(ALLOWED_ATTR, html$1);\n      }\n\n      if (USE_PROFILES.svg === true) {\n        addToSet(ALLOWED_TAGS, svg);\n        addToSet(ALLOWED_ATTR, svg$1);\n        addToSet(ALLOWED_ATTR, xml);\n      }\n\n      if (USE_PROFILES.svgFilters === true) {\n        addToSet(ALLOWED_TAGS, svgFilters);\n        addToSet(ALLOWED_ATTR, svg$1);\n        addToSet(ALLOWED_ATTR, xml);\n      }\n\n      if (USE_PROFILES.mathMl === true) {\n        addToSet(ALLOWED_TAGS, mathMl);\n        addToSet(ALLOWED_ATTR, mathMl$1);\n        addToSet(ALLOWED_ATTR, xml);\n      }\n    }\n\n    /* Merge configuration parameters */\n    if (cfg.ADD_TAGS) {\n      if (ALLOWED_TAGS === DEFAULT_ALLOWED_TAGS) {\n        ALLOWED_TAGS = clone(ALLOWED_TAGS);\n      }\n\n      addToSet(ALLOWED_TAGS, cfg.ADD_TAGS);\n    }\n\n    if (cfg.ADD_ATTR) {\n      if (ALLOWED_ATTR === DEFAULT_ALLOWED_ATTR) {\n        ALLOWED_ATTR = clone(ALLOWED_ATTR);\n      }\n\n      addToSet(ALLOWED_ATTR, cfg.ADD_ATTR);\n    }\n\n    if (cfg.ADD_URI_SAFE_ATTR) {\n      addToSet(URI_SAFE_ATTRIBUTES, cfg.ADD_URI_SAFE_ATTR);\n    }\n\n    /* Add #text in case KEEP_CONTENT is set to true */\n    if (KEEP_CONTENT) {\n      ALLOWED_TAGS['#text'] = true;\n    }\n\n    /* Add html, head and body to ALLOWED_TAGS in case WHOLE_DOCUMENT is true */\n    if (WHOLE_DOCUMENT) {\n      addToSet(ALLOWED_TAGS, ['html', 'head', 'body']);\n    }\n\n    /* Add tbody to ALLOWED_TAGS in case tables are permitted, see #286 */\n    if (ALLOWED_TAGS.table) {\n      addToSet(ALLOWED_TAGS, ['tbody']);\n    }\n\n    // Prevent further manipulation of configuration.\n    // Not available in IE8, Safari 5, etc.\n    if (freeze) {\n      freeze(cfg);\n    }\n\n    CONFIG = cfg;\n  };\n\n  /**\n   * _forceRemove\n   *\n   * @param  {Node} node a DOM node\n   */\n  var _forceRemove = function _forceRemove(node) {\n    DOMPurify.removed.push({ element: node });\n    try {\n      node.parentNode.removeChild(node);\n    } catch (error) {\n      node.outerHTML = emptyHTML;\n    }\n  };\n\n  /**\n   * _removeAttribute\n   *\n   * @param  {String} name an Attribute name\n   * @param  {Node} node a DOM node\n   */\n  var _removeAttribute = function _removeAttribute(name, node) {\n    try {\n      DOMPurify.removed.push({\n        attribute: node.getAttributeNode(name),\n        from: node\n      });\n    } catch (error) {\n      DOMPurify.removed.push({\n        attribute: null,\n        from: node\n      });\n    }\n\n    node.removeAttribute(name);\n  };\n\n  /**\n   * _initDocument\n   *\n   * @param  {String} dirty a string of dirty markup\n   * @return {Document} a DOM, filled with the dirty markup\n   */\n  var _initDocument = function _initDocument(dirty) {\n    /* Create a HTML document */\n    var doc = void 0;\n    var leadingWhitespace = void 0;\n\n    if (FORCE_BODY) {\n      dirty = '<remove></remove>' + dirty;\n    } else {\n      /* If FORCE_BODY isn't used, leading whitespace needs to be preserved manually */\n      var matches = dirty.match(/^[\\s]+/);\n      leadingWhitespace = matches && matches[0];\n      if (leadingWhitespace) {\n        dirty = dirty.slice(leadingWhitespace.length);\n      }\n    }\n\n    /* Use DOMParser to workaround Firefox bug (see comment below) */\n    if (useDOMParser) {\n      try {\n        doc = new DOMParser().parseFromString(dirty, 'text/html');\n      } catch (error) {}\n    }\n\n    /* Remove title to fix a mXSS bug in older MS Edge */\n    if (removeTitle) {\n      addToSet(FORBID_TAGS, ['title']);\n    }\n\n    /* Otherwise use createHTMLDocument, because DOMParser is unsafe in\n    Safari (see comment below) */\n    if (!doc || !doc.documentElement) {\n      doc = implementation.createHTMLDocument('');\n      var _doc = doc,\n          body = _doc.body;\n\n      body.parentNode.removeChild(body.parentNode.firstElementChild);\n      body.outerHTML = trustedTypesPolicy ? trustedTypesPolicy.createHTML(dirty) : dirty;\n    }\n\n    if (leadingWhitespace) {\n      doc.body.insertBefore(document.createTextNode(leadingWhitespace), doc.body.childNodes[0] || null);\n    }\n\n    /* Work on whole document or just its body */\n    return getElementsByTagName.call(doc, WHOLE_DOCUMENT ? 'html' : 'body')[0];\n  };\n\n  // Firefox uses a different parser for innerHTML rather than\n  // DOMParser (see https://bugzilla.mozilla.org/show_bug.cgi?id=1205631)\n  // which means that you *must* use DOMParser, otherwise the output may\n  // not be safe if used in a document.write context later.\n  //\n  // So we feature detect the Firefox bug and use the DOMParser if necessary.\n  //\n  // MS Edge, in older versions, is affected by an mXSS behavior. The second\n  // check tests for the behavior and fixes it if necessary.\n  if (DOMPurify.isSupported) {\n    (function () {\n      try {\n        var doc = _initDocument('<svg><p><style><img src=\"</style><img src=x onerror=1//\">');\n        if (doc.querySelector('svg img')) {\n          useDOMParser = true;\n        }\n      } catch (error) {}\n    })();\n\n    (function () {\n      try {\n        var doc = _initDocument('<x/><title>&lt;/title&gt;&lt;img&gt;');\n        if (doc.querySelector('title').innerHTML.match(/<\\/title/)) {\n          removeTitle = true;\n        }\n      } catch (error) {}\n    })();\n  }\n\n  /**\n   * _createIterator\n   *\n   * @param  {Document} root document/fragment to create iterator for\n   * @return {Iterator} iterator instance\n   */\n  var _createIterator = function _createIterator(root) {\n    return createNodeIterator.call(root.ownerDocument || root, root, NodeFilter.SHOW_ELEMENT | NodeFilter.SHOW_COMMENT | NodeFilter.SHOW_TEXT, function () {\n      return NodeFilter.FILTER_ACCEPT;\n    }, false);\n  };\n\n  /**\n   * _isClobbered\n   *\n   * @param  {Node} elm element to check for clobbering attacks\n   * @return {Boolean} true if clobbered, false if safe\n   */\n  var _isClobbered = function _isClobbered(elm) {\n    if (elm instanceof Text || elm instanceof Comment) {\n      return false;\n    }\n\n    if (typeof elm.nodeName !== 'string' || typeof elm.textContent !== 'string' || typeof elm.removeChild !== 'function' || !(elm.attributes instanceof NamedNodeMap) || typeof elm.removeAttribute !== 'function' || typeof elm.setAttribute !== 'function') {\n      return true;\n    }\n\n    return false;\n  };\n\n  /**\n   * _isNode\n   *\n   * @param  {Node} obj object to check whether it's a DOM node\n   * @return {Boolean} true is object is a DOM node\n   */\n  var _isNode = function _isNode(obj) {\n    return (typeof Node === 'undefined' ? 'undefined' : _typeof(Node)) === 'object' ? obj instanceof Node : obj && (typeof obj === 'undefined' ? 'undefined' : _typeof(obj)) === 'object' && typeof obj.nodeType === 'number' && typeof obj.nodeName === 'string';\n  };\n\n  /**\n   * _executeHook\n   * Execute user configurable hooks\n   *\n   * @param  {String} entryPoint  Name of the hook's entry point\n   * @param  {Node} currentNode node to work on with the hook\n   * @param  {Object} data additional hook parameters\n   */\n  var _executeHook = function _executeHook(entryPoint, currentNode, data) {\n    if (!hooks[entryPoint]) {\n      return;\n    }\n\n    hooks[entryPoint].forEach(function (hook) {\n      hook.call(DOMPurify, currentNode, data, CONFIG);\n    });\n  };\n\n  /**\n   * _sanitizeElements\n   *\n   * @protect nodeName\n   * @protect textContent\n   * @protect removeChild\n   *\n   * @param   {Node} currentNode to check for permission to exist\n   * @return  {Boolean} true if node was killed, false if left alive\n   */\n  // eslint-disable-next-line complexity\n  var _sanitizeElements = function _sanitizeElements(currentNode) {\n    var content = void 0;\n\n    /* Execute a hook if present */\n    _executeHook('beforeSanitizeElements', currentNode, null);\n\n    /* Check if element is clobbered or can clobber */\n    if (_isClobbered(currentNode)) {\n      _forceRemove(currentNode);\n      return true;\n    }\n\n    /* Now let's check the element's type and name */\n    var tagName = currentNode.nodeName.toLowerCase();\n\n    /* Execute a hook if present */\n    _executeHook('uponSanitizeElement', currentNode, {\n      tagName: tagName,\n      allowedTags: ALLOWED_TAGS\n    });\n\n    /* Remove element if anything forbids its presence */\n    if (!ALLOWED_TAGS[tagName] || FORBID_TAGS[tagName]) {\n      /* Keep content except for black-listed elements */\n      if (KEEP_CONTENT && !FORBID_CONTENTS[tagName] && typeof currentNode.insertAdjacentHTML === 'function') {\n        try {\n          var htmlToInsert = currentNode.innerHTML;\n          currentNode.insertAdjacentHTML('AfterEnd', trustedTypesPolicy ? trustedTypesPolicy.createHTML(htmlToInsert) : htmlToInsert);\n        } catch (error) {}\n      }\n\n      _forceRemove(currentNode);\n      return true;\n    }\n\n    /* Remove in case a noscript/noembed XSS is suspected */\n    if (tagName === 'noscript' && currentNode.innerHTML.match(/<\\/noscript/i)) {\n      _forceRemove(currentNode);\n      return true;\n    }\n\n    if (tagName === 'noembed' && currentNode.innerHTML.match(/<\\/noembed/i)) {\n      _forceRemove(currentNode);\n      return true;\n    }\n\n    /* Convert markup to cover jQuery behavior */\n    if (SAFE_FOR_JQUERY && !currentNode.firstElementChild && (!currentNode.content || !currentNode.content.firstElementChild) && /</g.test(currentNode.textContent)) {\n      DOMPurify.removed.push({ element: currentNode.cloneNode() });\n      if (currentNode.innerHTML) {\n        currentNode.innerHTML = currentNode.innerHTML.replace(/</g, '&lt;');\n      } else {\n        currentNode.innerHTML = currentNode.textContent.replace(/</g, '&lt;');\n      }\n    }\n\n    /* Sanitize element content to be template-safe */\n    if (SAFE_FOR_TEMPLATES && currentNode.nodeType === 3) {\n      /* Get the element's text content */\n      content = currentNode.textContent;\n      content = content.replace(MUSTACHE_EXPR$$1, ' ');\n      content = content.replace(ERB_EXPR$$1, ' ');\n      if (currentNode.textContent !== content) {\n        DOMPurify.removed.push({ element: currentNode.cloneNode() });\n        currentNode.textContent = content;\n      }\n    }\n\n    /* Execute a hook if present */\n    _executeHook('afterSanitizeElements', currentNode, null);\n\n    return false;\n  };\n\n  /**\n   * _isValidAttribute\n   *\n   * @param  {string} lcTag Lowercase tag name of containing element.\n   * @param  {string} lcName Lowercase attribute name.\n   * @param  {string} value Attribute value.\n   * @return {Boolean} Returns true if `value` is valid, otherwise false.\n   */\n  // eslint-disable-next-line complexity\n  var _isValidAttribute = function _isValidAttribute(lcTag, lcName, value) {\n    /* Make sure attribute cannot clobber */\n    if (SANITIZE_DOM && (lcName === 'id' || lcName === 'name') && (value in document || value in formElement)) {\n      return false;\n    }\n\n    /* Allow valid data-* attributes: At least one character after \"-\"\n        (https://html.spec.whatwg.org/multipage/dom.html#embedding-custom-non-visible-data-with-the-data-*-attributes)\n        XML-compatible (https://html.spec.whatwg.org/multipage/infrastructure.html#xml-compatible and http://www.w3.org/TR/xml/#d0e804)\n        We don't need to check the value; it's always URI safe. */\n    if (ALLOW_DATA_ATTR && DATA_ATTR$$1.test(lcName)) {\n      // This attribute is safe\n    } else if (ALLOW_ARIA_ATTR && ARIA_ATTR$$1.test(lcName)) {\n      // This attribute is safe\n      /* Otherwise, check the name is permitted */\n    } else if (!ALLOWED_ATTR[lcName] || FORBID_ATTR[lcName]) {\n      return false;\n\n      /* Check value is safe. First, is attr inert? If so, is safe */\n    } else if (URI_SAFE_ATTRIBUTES[lcName]) {\n      // This attribute is safe\n      /* Check no script, data or unknown possibly unsafe URI\n        unless we know URI values are safe for that attribute */\n    } else if (IS_ALLOWED_URI$$1.test(value.replace(ATTR_WHITESPACE$$1, ''))) {\n      // This attribute is safe\n      /* Keep image data URIs alive if src/xlink:href is allowed */\n      /* Further prevent gadget XSS for dynamically built script tags */\n    } else if ((lcName === 'src' || lcName === 'xlink:href') && lcTag !== 'script' && value.indexOf('data:') === 0 && DATA_URI_TAGS[lcTag]) {\n      // This attribute is safe\n      /* Allow unknown protocols: This provides support for links that\n        are handled by protocol handlers which may be unknown ahead of\n        time, e.g. fb:, spotify: */\n    } else if (ALLOW_UNKNOWN_PROTOCOLS && !IS_SCRIPT_OR_DATA$$1.test(value.replace(ATTR_WHITESPACE$$1, ''))) {\n      // This attribute is safe\n      /* Check for binary attributes */\n      // eslint-disable-next-line no-negated-condition\n    } else if (!value) {\n      // Binary attributes are safe at this point\n      /* Anything else, presume unsafe, do not add it back */\n    } else {\n      return false;\n    }\n\n    return true;\n  };\n\n  /**\n   * _sanitizeAttributes\n   *\n   * @protect attributes\n   * @protect nodeName\n   * @protect removeAttribute\n   * @protect setAttribute\n   *\n   * @param  {Node} currentNode to sanitize\n   */\n  var _sanitizeAttributes = function _sanitizeAttributes(currentNode) {\n    var attr = void 0;\n    var value = void 0;\n    var lcName = void 0;\n    var idAttr = void 0;\n    var l = void 0;\n    /* Execute a hook if present */\n    _executeHook('beforeSanitizeAttributes', currentNode, null);\n\n    var attributes = currentNode.attributes;\n\n    /* Check if we have attributes; if not we might have a text node */\n\n    if (!attributes) {\n      return;\n    }\n\n    var hookEvent = {\n      attrName: '',\n      attrValue: '',\n      keepAttr: true,\n      allowedAttributes: ALLOWED_ATTR\n    };\n    l = attributes.length;\n\n    /* Go backwards over all attributes; safely remove bad ones */\n    while (l--) {\n      attr = attributes[l];\n      var _attr = attr,\n          name = _attr.name,\n          namespaceURI = _attr.namespaceURI;\n\n      value = attr.value.trim();\n      lcName = name.toLowerCase();\n\n      /* Execute a hook if present */\n      hookEvent.attrName = lcName;\n      hookEvent.attrValue = value;\n      hookEvent.keepAttr = true;\n      _executeHook('uponSanitizeAttribute', currentNode, hookEvent);\n      value = hookEvent.attrValue;\n\n      /* Remove attribute */\n      // Safari (iOS + Mac), last tested v8.0.5, crashes if you try to\n      // remove a \"name\" attribute from an <img> tag that has an \"id\"\n      // attribute at the time.\n      if (lcName === 'name' && currentNode.nodeName === 'IMG' && attributes.id) {\n        idAttr = attributes.id;\n        attributes = apply(arraySlice, attributes, []);\n        _removeAttribute('id', currentNode);\n        _removeAttribute(name, currentNode);\n        if (attributes.indexOf(idAttr) > l) {\n          currentNode.setAttribute('id', idAttr.value);\n        }\n      } else if (\n      // This works around a bug in Safari, where input[type=file]\n      // cannot be dynamically set after type has been removed\n      currentNode.nodeName === 'INPUT' && lcName === 'type' && value === 'file' && (ALLOWED_ATTR[lcName] || !FORBID_ATTR[lcName])) {\n        continue;\n      } else {\n        // This avoids a crash in Safari v9.0 with double-ids.\n        // The trick is to first set the id to be empty and then to\n        // remove the attribute\n        if (name === 'id') {\n          currentNode.setAttribute(name, '');\n        }\n\n        _removeAttribute(name, currentNode);\n      }\n\n      /* Did the hooks approve of the attribute? */\n      if (!hookEvent.keepAttr) {\n        continue;\n      }\n\n      /* Sanitize attribute content to be template-safe */\n      if (SAFE_FOR_TEMPLATES) {\n        value = value.replace(MUSTACHE_EXPR$$1, ' ');\n        value = value.replace(ERB_EXPR$$1, ' ');\n      }\n\n      /* Is `value` valid for this attribute? */\n      var lcTag = currentNode.nodeName.toLowerCase();\n      if (!_isValidAttribute(lcTag, lcName, value)) {\n        continue;\n      }\n\n      /* Handle invalid data-* attribute set by try-catching it */\n      try {\n        if (namespaceURI) {\n          currentNode.setAttributeNS(namespaceURI, name, value);\n        } else {\n          /* Fallback to setAttribute() for browser-unrecognized namespaces e.g. \"x-schema\". */\n          currentNode.setAttribute(name, value);\n        }\n\n        DOMPurify.removed.pop();\n      } catch (error) {}\n    }\n\n    /* Execute a hook if present */\n    _executeHook('afterSanitizeAttributes', currentNode, null);\n  };\n\n  /**\n   * _sanitizeShadowDOM\n   *\n   * @param  {DocumentFragment} fragment to iterate over recursively\n   */\n  var _sanitizeShadowDOM = function _sanitizeShadowDOM(fragment) {\n    var shadowNode = void 0;\n    var shadowIterator = _createIterator(fragment);\n\n    /* Execute a hook if present */\n    _executeHook('beforeSanitizeShadowDOM', fragment, null);\n\n    while (shadowNode = shadowIterator.nextNode()) {\n      /* Execute a hook if present */\n      _executeHook('uponSanitizeShadowNode', shadowNode, null);\n\n      /* Sanitize tags and elements */\n      if (_sanitizeElements(shadowNode)) {\n        continue;\n      }\n\n      /* Deep shadow DOM detected */\n      if (shadowNode.content instanceof DocumentFragment) {\n        _sanitizeShadowDOM(shadowNode.content);\n      }\n\n      /* Check attributes, sanitize if necessary */\n      _sanitizeAttributes(shadowNode);\n    }\n\n    /* Execute a hook if present */\n    _executeHook('afterSanitizeShadowDOM', fragment, null);\n  };\n\n  /**\n   * Sanitize\n   * Public method providing core sanitation functionality\n   *\n   * @param {String|Node} dirty string or DOM node\n   * @param {Object} configuration object\n   */\n  // eslint-disable-next-line complexity\n  DOMPurify.sanitize = function (dirty, cfg) {\n    var body = void 0;\n    var importedNode = void 0;\n    var currentNode = void 0;\n    var oldNode = void 0;\n    var returnNode = void 0;\n    /* Make sure we have a string to sanitize.\n      DO NOT return early, as this will return the wrong type if\n      the user has requested a DOM object rather than a string */\n    if (!dirty) {\n      dirty = '<!-->';\n    }\n\n    /* Stringify, in case dirty is an object */\n    if (typeof dirty !== 'string' && !_isNode(dirty)) {\n      // eslint-disable-next-line no-negated-condition\n      if (typeof dirty.toString !== 'function') {\n        throw new TypeError('toString is not a function');\n      } else {\n        dirty = dirty.toString();\n        if (typeof dirty !== 'string') {\n          throw new TypeError('dirty is not a string, aborting');\n        }\n      }\n    }\n\n    /* Check we can run. Otherwise fall back or ignore */\n    if (!DOMPurify.isSupported) {\n      if (_typeof(window.toStaticHTML) === 'object' || typeof window.toStaticHTML === 'function') {\n        if (typeof dirty === 'string') {\n          return window.toStaticHTML(dirty);\n        }\n\n        if (_isNode(dirty)) {\n          return window.toStaticHTML(dirty.outerHTML);\n        }\n      }\n\n      return dirty;\n    }\n\n    /* Assign config vars */\n    if (!SET_CONFIG) {\n      _parseConfig(cfg);\n    }\n\n    /* Clean up removed elements */\n    DOMPurify.removed = [];\n\n    if (IN_PLACE) {\n      /* No special handling necessary for in-place sanitization */\n    } else if (dirty instanceof Node) {\n      /* If dirty is a DOM element, append to an empty document to avoid\n         elements being stripped by the parser */\n      body = _initDocument('<!-->');\n      importedNode = body.ownerDocument.importNode(dirty, true);\n      if (importedNode.nodeType === 1 && importedNode.nodeName === 'BODY') {\n        /* Node is already a body, use as is */\n        body = importedNode;\n      } else {\n        // eslint-disable-next-line unicorn/prefer-node-append\n        body.appendChild(importedNode);\n      }\n    } else {\n      /* Exit directly if we have nothing to do */\n      if (!RETURN_DOM && !SAFE_FOR_TEMPLATES && !WHOLE_DOCUMENT && dirty.indexOf('<') === -1) {\n        return trustedTypesPolicy ? trustedTypesPolicy.createHTML(dirty) : dirty;\n      }\n\n      /* Initialize the document to work on */\n      body = _initDocument(dirty);\n\n      /* Check we have a DOM node from the data */\n      if (!body) {\n        return RETURN_DOM ? null : emptyHTML;\n      }\n    }\n\n    /* Remove first element node (ours) if FORCE_BODY is set */\n    if (body && FORCE_BODY) {\n      _forceRemove(body.firstChild);\n    }\n\n    /* Get node iterator */\n    var nodeIterator = _createIterator(IN_PLACE ? dirty : body);\n\n    /* Now start iterating over the created document */\n    while (currentNode = nodeIterator.nextNode()) {\n      /* Fix IE's strange behavior with manipulated textNodes #89 */\n      if (currentNode.nodeType === 3 && currentNode === oldNode) {\n        continue;\n      }\n\n      /* Sanitize tags and elements */\n      if (_sanitizeElements(currentNode)) {\n        continue;\n      }\n\n      /* Shadow DOM detected, sanitize it */\n      if (currentNode.content instanceof DocumentFragment) {\n        _sanitizeShadowDOM(currentNode.content);\n      }\n\n      /* Check attributes, sanitize if necessary */\n      _sanitizeAttributes(currentNode);\n\n      oldNode = currentNode;\n    }\n\n    oldNode = null;\n\n    /* If we sanitized `dirty` in-place, return it. */\n    if (IN_PLACE) {\n      return dirty;\n    }\n\n    /* Return sanitized string or DOM */\n    if (RETURN_DOM) {\n      if (RETURN_DOM_FRAGMENT) {\n        returnNode = createDocumentFragment.call(body.ownerDocument);\n\n        while (body.firstChild) {\n          // eslint-disable-next-line unicorn/prefer-node-append\n          returnNode.appendChild(body.firstChild);\n        }\n      } else {\n        returnNode = body;\n      }\n\n      if (RETURN_DOM_IMPORT) {\n        /* AdoptNode() is not used because internal state is not reset\n               (e.g. the past names map of a HTMLFormElement), this is safe\n               in theory but we would rather not risk another attack vector.\n               The state that is cloned by importNode() is explicitly defined\n               by the specs. */\n        returnNode = importNode.call(originalDocument, returnNode, true);\n      }\n\n      return returnNode;\n    }\n\n    var serializedHTML = WHOLE_DOCUMENT ? body.outerHTML : body.innerHTML;\n\n    /* Sanitize final string template-safe */\n    if (SAFE_FOR_TEMPLATES) {\n      serializedHTML = serializedHTML.replace(MUSTACHE_EXPR$$1, ' ');\n      serializedHTML = serializedHTML.replace(ERB_EXPR$$1, ' ');\n    }\n\n    return trustedTypesPolicy ? trustedTypesPolicy.createHTML(serializedHTML) : serializedHTML;\n  };\n\n  /**\n   * Public method to set the configuration once\n   * setConfig\n   *\n   * @param {Object} cfg configuration object\n   */\n  DOMPurify.setConfig = function (cfg) {\n    _parseConfig(cfg);\n    SET_CONFIG = true;\n  };\n\n  /**\n   * Public method to remove the configuration\n   * clearConfig\n   *\n   */\n  DOMPurify.clearConfig = function () {\n    CONFIG = null;\n    SET_CONFIG = false;\n  };\n\n  /**\n   * Public method to check if an attribute value is valid.\n   * Uses last set config, if any. Otherwise, uses config defaults.\n   * isValidAttribute\n   *\n   * @param  {string} tag Tag name of containing element.\n   * @param  {string} attr Attribute name.\n   * @param  {string} value Attribute value.\n   * @return {Boolean} Returns true if `value` is valid. Otherwise, returns false.\n   */\n  DOMPurify.isValidAttribute = function (tag, attr, value) {\n    /* Initialize shared config vars if necessary. */\n    if (!CONFIG) {\n      _parseConfig({});\n    }\n\n    var lcTag = tag.toLowerCase();\n    var lcName = attr.toLowerCase();\n    return _isValidAttribute(lcTag, lcName, value);\n  };\n\n  /**\n   * AddHook\n   * Public method to add DOMPurify hooks\n   *\n   * @param {String} entryPoint entry point for the hook to add\n   * @param {Function} hookFunction function to execute\n   */\n  DOMPurify.addHook = function (entryPoint, hookFunction) {\n    if (typeof hookFunction !== 'function') {\n      return;\n    }\n\n    hooks[entryPoint] = hooks[entryPoint] || [];\n    hooks[entryPoint].push(hookFunction);\n  };\n\n  /**\n   * RemoveHook\n   * Public method to remove a DOMPurify hook at a given entryPoint\n   * (pops it from the stack of hooks if more are present)\n   *\n   * @param {String} entryPoint entry point for the hook to remove\n   */\n  DOMPurify.removeHook = function (entryPoint) {\n    if (hooks[entryPoint]) {\n      hooks[entryPoint].pop();\n    }\n  };\n\n  /**\n   * RemoveHooks\n   * Public method to remove all DOMPurify hooks at a given entryPoint\n   *\n   * @param  {String} entryPoint entry point for the hooks to remove\n   */\n  DOMPurify.removeHooks = function (entryPoint) {\n    if (hooks[entryPoint]) {\n      hooks[entryPoint] = [];\n    }\n  };\n\n  /**\n   * RemoveAllHooks\n   * Public method to remove all DOMPurify hooks\n   *\n   */\n  DOMPurify.removeAllHooks = function () {\n    hooks = {};\n  };\n\n  return DOMPurify;\n}\n\nvar purify = createDOMPurify();\n\nreturn purify;\n\n})));\n//# sourceMappingURL=purify.js.map\n","import mod from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../node_modules/css-loader/index.js??ref--6-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./About.vue?vue&type=style&index=0&lang=css&\"; export default mod; export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../node_modules/css-loader/index.js??ref--6-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./About.vue?vue&type=style&index=0&lang=css&\"","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"about\"},[_c('h1',[_vm._v(\"This is an about page\")]),_c('div',{staticClass:\"trapezoid\"}),_c('div',{staticClass:\"tranggler\"}),_c('p'),_c('textarea',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.inputValue),expression:\"inputValue\"}],staticClass:\"cat-textarea\",domProps:{\"value\":(_vm.inputValue)},on:{\"input\":function($event){if($event.target.composing){ return; }_vm.inputValue=$event.target.value}}}),_c('div',[_vm._v(\"DomPurify.sanitize: \"+_vm._s(_vm.outputValue))])])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n  <div class=\"about\">\n    <h1>This is an about page</h1>\n    <div class=\"trapezoid\"></div>\n    <div class=\"tranggler\"></div>\n    <p></p>\n    <textarea class=\"cat-textarea\" v-model=\"inputValue\"></textarea>\n    <div>DomPurify.sanitize: {{outputValue}}</div>\n  </div>\n</template>\n<script>\nimport DomPurify from 'dompurify'\nexport default {\n  data () {\n    return {\n      inputValue: '',\n      outputValue: ''\n    }\n  },\n  watch: {\n    inputValue (val) {\n      this.outputValue = DomPurify.sanitize(val)\n    }\n  }\n}\n</script>\n\n<style>\n.trapezoid {\n  /*** 严谨的需要加上 ****/\n  display: inline-block;\n  /*********************/\n  border-bottom: 80px solid gold;\n  border-left: 80px solid transparent;\n  border-right: 50px solid gold;\n}\n.tranggler {\n  display: inline-block;\n  border-bottom: 80px solid green;\n  border-left: 80px solid blue;\n  border-right: 80px solid red;\n}\n.cat-textarea {\n  width: 360px;\n  height: 100px;\n  padding: 10px;\n  border: 1px solid #e4e4e4;\n  outline: 0;\n  border-radius: 5px;\n  box-shadow: inset 0 0 6px 0px #37a9ff4f;\n}\n</style>\n","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./About.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./About.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./About.vue?vue&type=template&id=3156cbd7&\"\nimport script from \"./About.vue?vue&type=script&lang=js&\"\nexport * from \"./About.vue?vue&type=script&lang=js&\"\nimport style0 from \"./About.vue?vue&type=style&index=0&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports"],"sourceRoot":""}